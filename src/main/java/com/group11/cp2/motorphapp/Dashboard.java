/**
 * Dashboard form for managing employee records in the MotorPH Payroll System.
 *
 * @author Kristopher Carlo, Clarinda, Pil, Janice (Group 11)
 */
package com.group11.cp2.motorphapp;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionListener;
import java.util.List;

public class Dashboard extends javax.swing.JFrame {

    private List<User> users;
    private List<Employee> employees;
    private List<AttendanceRecord> attendance;

    /**
     * Creates a new Dashboard with required data.
     *
     * @param users List of users.
     * @param employees List of employees.
     * @param attendance List of attendance records.
     */
    public Dashboard(List<User> users, List<Employee> employees, List<AttendanceRecord> attendance) {
        this.users = users;
        this.employees = employees;
        this.attendance = attendance;
        initComponents();
        initializeDashboard();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(14, 39, 94));
        jPanel1.setPreferredSize(new java.awt.Dimension(1800, 1000));
        jPanel1.setLayout(null);

        jButton7.setBackground(new java.awt.Color(0, 102, 204));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("View Employee");
        jPanel1.add(jButton7);
        jButton7.setBounds(670, 950, 123, 30);

        jButton6.setBackground(new java.awt.Color(0, 102, 204));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Add Employee");
        jPanel1.add(jButton6);
        jButton6.setBounds(810, 950, 119, 30);

        jButton8.setBackground(new java.awt.Color(0, 102, 204));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Update");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(940, 950, 74, 30);

        jButton26.setBackground(new java.awt.Color(0, 102, 204));
        jButton26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton26.setForeground(new java.awt.Color(255, 255, 255));
        jButton26.setText("Delete");
        jPanel1.add(jButton26);
        jButton26.setBounds(1030, 950, 72, 30);

        jButton9.setBackground(new java.awt.Color(0, 102, 204));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Back To Menu");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(1660, 950, 120, 30);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable4.setBackground(new java.awt.Color(233, 233, 233));
        jTable4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee #", "Last Name", "First Name", "SSS #", "Philhealth #", "TIN #", "Pag Ibig #"
            }
        ));
        jTable4.setColumnSelectionAllowed(true);
        jTable4.setGridColor(new java.awt.Color(153, 153, 153));
        jTable4.setRowHeight(25);
        jTable4.setRowSelectionAllowed(false);
        jTable4.setShowGrid(true);
        jScrollPane4.setViewportView(jTable4);
        jTable4.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setHeaderValue("Employee #");
            jTable4.getColumnModel().getColumn(1).setHeaderValue("Last Name");
            jTable4.getColumnModel().getColumn(2).setHeaderValue("First Name");
            jTable4.getColumnModel().getColumn(3).setHeaderValue("SSS #");
            jTable4.getColumnModel().getColumn(4).setHeaderValue("Philhealth #");
            jTable4.getColumnModel().getColumn(5).setHeaderValue("TIN #");
            jTable4.getColumnModel().getColumn(6).setHeaderValue("Pag Ibig #");
        }

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(530, 10, 1260, 920);

        jPanel12.setBackground(new java.awt.Color(233, 233, 233));
        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel12.setPreferredSize(new java.awt.Dimension(500, 900));

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(14, 49, 113));
        jLabel8.setText("Employee Details");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(14, 49, 113));
        jLabel9.setText("Employee Number:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(14, 49, 113));
        jLabel10.setText("Last Name:*");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(14, 49, 113));
        jLabel11.setText("First Name:*");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(14, 49, 113));
        jLabel12.setText("SSS Number:*");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(14, 49, 113));
        jLabel13.setText("PhilhHealth Number:*");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(14, 49, 113));
        jLabel14.setText("TIN Number:*");

        jTextField7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jTextField9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTextField10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTextField11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTextField12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTextField12.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(14, 49, 113));
        jLabel15.setText("PagIbig Number:*");

        jTextField13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTextField13.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        jButton12.setBackground(new java.awt.Color(0, 102, 204));
        jButton12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Save");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(jButton12))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton12)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel12);
        jPanel12.setBounds(10, 10, 512, 920);
        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(1630, 30, 50, 790);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void initializeDashboard() {
        System.setProperty("sun.java2d.uiScale", "1.0"); // Fix DPI scaling
        User loggedInUser = User.getLoggedInUser();
        setTitle("MotorPH Payroll System");
        setLocationRelativeTo(null);

        try {
            // Adjust button sizes
            jButton7.setBounds(680, 950, 150, 30); // View Employee
            jButton6.setBounds(840, 950, 150, 30); // Add Employee
            jButton8.setBounds(1000, 950, 100, 30); // Update
            jButton26.setBounds(1110, 950, 100, 30); // Delete
            jButton9.setBounds(1660, 950, 120, 30); // Back to Menu

            // Configure jTable4
            jTable4.setRowSelectionAllowed(true);
            jTable4.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            jTable4.getColumnModel().getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            if (jTable4.getColumnModel().getColumnCount() >= 7) {
                jTable4.getColumnModel().getColumn(0).setPreferredWidth(120);
                jTable4.getColumnModel().getColumn(1).setPreferredWidth(200);
                jTable4.getColumnModel().getColumn(2).setPreferredWidth(200);
                jTable4.getColumnModel().getColumn(3).setPreferredWidth(120);
                jTable4.getColumnModel().getColumn(4).setPreferredWidth(120);
                jTable4.getColumnModel().getColumn(5).setPreferredWidth(120);
                jTable4.getColumnModel().getColumn(6).setPreferredWidth(120);
            }

            // Populate jTable4 from in-memory employees list
            DefaultTableModel tableModel = (DefaultTableModel) jTable4.getModel();
            tableModel.setRowCount(0);
            for (Employee emp : employees) {
                GovernmentDetails gov = emp.getGovernmentDetails();
                tableModel.addRow(new Object[]{
                        emp.getEmployeeNumber(),
                        emp.getLastName(),
                        emp.getFirstName(),
                        gov != null ? gov.getSssNumber() : "N/A",
                        gov != null ? gov.getPhilHealthNumber() : "N/A",
                        gov != null ? gov.getTinNumber() : "N/A",
                        gov != null ? gov.getPagIbigNumber() : "N/A"
                });
            }

            // Enable buttons and set text field properties
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(false);
            jButton26.setEnabled(false);
            jButton12.setEnabled(false);
            jTextField8.setEditable(false);

            // Remove existing action listeners
            for (ActionListener al : jButton6.getActionListeners()) {
                jButton6.removeActionListener(al);
            }
            for (ActionListener al : jButton7.getActionListeners()) {
                jButton7.removeActionListener(al);
            }
            for (ActionListener al : jButton8.getActionListeners()) {
                jButton8.removeActionListener(al);
            }
            for (ActionListener al : jButton26.getActionListeners()) {
                jButton26.removeActionListener(al);
            }
            for (ActionListener al : jButton9.getActionListeners()) {
                jButton9.removeActionListener(al);
            }
            for (ActionListener al : jButton12.getActionListeners()) {
                jButton12.removeActionListener(al);
            }

            // Row selection listener
            jTable4.getSelectionModel().addListSelectionListener(e -> {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTable4.getSelectedRow();
                    if (selectedRow >= 0) {
                        jTextField8.setText(String.valueOf(tableModel.getValueAt(selectedRow, 0)));
                        jTextField9.setText(String.valueOf(tableModel.getValueAt(selectedRow, 1)));
                        jTextField10.setText(String.valueOf(tableModel.getValueAt(selectedRow, 2)));
                        jTextField11.setText(String.valueOf(tableModel.getValueAt(selectedRow, 3)));
                        jTextField7.setText(String.valueOf(tableModel.getValueAt(selectedRow, 4)));
                        jTextField13.setText(String.valueOf(tableModel.getValueAt(selectedRow, 5)));
                        jTextField12.setText(String.valueOf(tableModel.getValueAt(selectedRow, 6)));
                        jButton8.setEnabled(true);
                        jButton26.setEnabled(true);
                        jButton12.setEnabled(true);
                    } else {
                        jTextField8.setText("");
                        jTextField9.setText("");
                        jTextField10.setText("");
                        jTextField11.setText("");
                        jTextField7.setText("");
                        jTextField13.setText("");
                        jTextField12.setText("");
                        jButton8.setEnabled(false);
                        jButton26.setEnabled(false);
                        jButton12.setEnabled(false);
                    }
                }
            });

            // Add Employee
            jButton6.addActionListener(e -> {
                try {
                    NewEmployeeRecord addFrame = new NewEmployeeRecord(employees, tableModel);
                    addFrame.setLocationRelativeTo(this);
                    addFrame.setVisible(true);
                    addFrame.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                            // Refresh table after NewEmployeeRecord closes
                            tableModel.setRowCount(0);
                            for (Employee emp : employees) {
                                GovernmentDetails gov = emp.getGovernmentDetails();
                                tableModel.addRow(new Object[]{
                                        emp.getEmployeeNumber(),
                                        emp.getLastName(),
                                        emp.getFirstName(),
                                        gov != null ? gov.getSssNumber() : "N/A",
                                        gov != null ? gov.getPhilHealthNumber() : "N/A",
                                        gov != null ? gov.getTinNumber() : "N/A",
                                        gov != null ? gov.getPagIbigNumber() : "N/A"
                                });
                            }
                            jTable4.revalidate();
                            jTable4.repaint();
                        }
                    });
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Error opening add form: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // View Employee
            jButton7.addActionListener(e -> {
                int selectedRow = jTable4.getSelectedRow();
                if (selectedRow >= 0) {
                    int empNumber = Integer.parseInt(tableModel.getValueAt(selectedRow, 0).toString());
                    Employee emp = employees.stream()
                            .filter(employee -> employee.getEmployeeNumber() == empNumber)
                            .findFirst()
                            .orElse(null);
                    if (emp != null) {
                        System.out.println("Calling PayrollFrame for Employee: " + emp.getEmployeeNumber() + ", " + emp.getLastName());
                        System.out.println("Attendance records: " + (attendance != null ? attendance.size() : "null"));
                        PayrollFrame detailsFrame = new PayrollFrame(this, emp, attendance);
                        detailsFrame.setLocationRelativeTo(null);
                        detailsFrame.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Employee not found.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please select an employee.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Update Employee
            ActionListener updateEmployeeAction = e -> {
                int selectedRow = jTable4.getSelectedRow();
                if (selectedRow >= 0) {
                    try {
                        String empNumberText = jTextField8.getText().trim();
                        String lastName = jTextField9.getText().trim();
                        String firstName = jTextField10.getText().trim();
                        String sssNumber = jTextField11.getText().trim();
                        String philHealthNumber = jTextField7.getText().trim();
                        String tinNumber = jTextField13.getText().trim();
                        String pagIbigNumber = jTextField12.getText().trim();

                        // Validate no empty fields
                        if (empNumberText.isEmpty() || lastName.isEmpty() || firstName.isEmpty() ||
                                sssNumber.isEmpty() || philHealthNumber.isEmpty() ||
                                tinNumber.isEmpty() || pagIbigNumber.isEmpty()) {
                            JOptionPane.showMessageDialog(this, "All fields must be filled.", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        int empNumber = Integer.parseInt(empNumberText);
                        Employee emp = employees.stream()
                                .filter(employee -> employee.getEmployeeNumber() == empNumber)
                                .findFirst()
                                .orElse(null);
                        if (emp == null) {
                            JOptionPane.showMessageDialog(this, "Employee not found.", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        // Validate ID number formats
                        if (!sssNumber.matches("\\d{2}-\\d{7}-\\d{1}") ||
                                !philHealthNumber.matches("\\d{9,12}") ||
                                !tinNumber.matches("\\d{3}-\\d{3}-\\d{3}-\\d{3}") ||
                                !pagIbigNumber.matches("\\d{9,12}")) {
                            JOptionPane.showMessageDialog(this,
                                    "Please enter valid ID numbers:\n" +
                                    "SSS: XX-XXXXXXX-X (e.g., 44-4506057-3)\n" +
                                    "TIN: XXX-XXX-XXX-XXX (e.g., 448-272-771-000)\n" +
                                    "PhilHealth/Pag-IBIG: 9–12 digits",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        emp.setLastName(lastName);
                        emp.setFirstName(firstName);
                        GovernmentDetails gov = new GovernmentDetails(sssNumber, philHealthNumber, tinNumber, pagIbigNumber);
                        emp.setGovernmentDetails(gov);

                        User user = users.stream()
                                .filter(u -> u.getEmployee() != null && u.getEmployee().getEmployeeNumber() == empNumber)
                                .findFirst()
                                .orElse(null);
                        if (user != null) {
                            user.setEmployee(emp);
                            user.setUsername(firstName.toLowerCase() + empNumber);
                        }

                        tableModel.setValueAt(lastName, selectedRow, 1);
                        tableModel.setValueAt(firstName, selectedRow, 2);
                        tableModel.setValueAt(sssNumber, selectedRow, 3);
                        tableModel.setValueAt(philHealthNumber, selectedRow, 4);
                        tableModel.setValueAt(tinNumber, selectedRow, 5);
                        tableModel.setValueAt(pagIbigNumber, selectedRow, 6);

                        CSVHandler.writeEmployeesToCSV(employees, "src/main/resources/employeedata.csv");
                        JOptionPane.showMessageDialog(this, "Employee updated!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(this, "Invalid employee number format.", "Error", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Error updating employee: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please select an employee.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            };

            jButton8.addActionListener(updateEmployeeAction);
            jButton12.addActionListener(updateEmployeeAction);

            // Delete Employee
            jButton26.addActionListener(e -> {
                int selectedRow = jTable4.getSelectedRow();
                if (selectedRow >= 0) {
                    try {
                        int empNumber = Integer.parseInt(tableModel.getValueAt(selectedRow, 0).toString());
                        int confirm = JOptionPane.showConfirmDialog(this, "Delete employee #" + empNumber + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                        if (confirm == JOptionPane.YES_OPTION) {
                            Employee emp = employees.stream()
                                    .filter(employee -> employee.getEmployeeNumber() == empNumber)
                                    .findFirst()
                                    .orElse(null);
                            if (emp != null) {
                                employees.remove(emp);
                                users.removeIf(user -> user.getEmployee() != null && user.getEmployee().getEmployeeNumber() == empNumber);
                                attendance.removeIf(record -> record.getEmployeeNumber() == empNumber);
                                tableModel.removeRow(selectedRow);
                                CSVHandler.writeEmployeesToCSV(employees, "src/main/resources/employeedata.csv");
                                CSVHandler.writeAttendanceToCSV(attendance, "src/main/resources/attendancerecord.csv");
                                jTextField8.setText("");
                                jTextField9.setText("");
                                jTextField10.setText("");
                                jTextField11.setText("");
                                jTextField7.setText("");
                                jTextField13.setText("");
                                jTextField12.setText("");
                                JOptionPane.showMessageDialog(this, "Employee deleted!", "Success", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(this, "Employee not found.", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Error deleting employee: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please select an employee.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            // Back to Menu
            jButton9.addActionListener(e -> {
                SelectionMenu selectionMenu = new SelectionMenu();
                selectionMenu.setLocationRelativeTo(null);
                selectionMenu.setVisible(true);
                dispose();
            });

            // Refresh UI
            jTable4.revalidate();
            jTable4.repaint();
            this.revalidate();
            this.repaint();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error initializing Dashboard: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            new UserLogin(users).setVisible(true);
            dispose();
        }

        setVisible(true);
    }

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // Note: This main method is for testing only; actual instantiation happens via MotorPHApp
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton jButton12;
    protected javax.swing.JButton jButton26;
    protected javax.swing.JButton jButton6;
    protected javax.swing.JButton jButton7;
    protected javax.swing.JButton jButton8;
    protected javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JScrollPane jScrollPane4;
    protected javax.swing.JTable jTable4;
    protected javax.swing.JTextField jTextField10;
    protected javax.swing.JTextField jTextField11;
    protected javax.swing.JTextField jTextField12;
    protected javax.swing.JTextField jTextField13;
    protected javax.swing.JTextField jTextField7;
    protected javax.swing.JTextField jTextField8;
    protected javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
